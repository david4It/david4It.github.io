<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>唯</title>
  
  <subtitle>终生成长</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-05T09:46:33.728Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>David</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>单点登录（四）</title>
    <link href="http://yoursite.com/2020/06/05/ckb20y8tk0008iwvjhteucvth/"/>
    <id>http://yoursite.com/2020/06/05/ckb20y8tk0008iwvjhteucvth/</id>
    <published>2020-06-05T02:30:48.000Z</published>
    <updated>2020-06-05T09:46:33.728Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;经过之前几篇文章的介绍以及Demo项目的搭建，加深了对CAS概念的理解，掌握了基础的应用方式。本文主要是从代码层面上对整个认证流程进行一个梳理，加深我们对CAS框架认证流程的一个认识。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CAS" scheme="http://yoursite.com/categories/CAS/"/>
    
    
      <category term="CAS" scheme="http://yoursite.com/tags/CAS/"/>
    
  </entry>
  
  <entry>
    <title>单点登录（三）</title>
    <link href="http://yoursite.com/2020/06/03/ckb20y8tj0007iwvj7y7hc6qh/"/>
    <id>http://yoursite.com/2020/06/03/ckb20y8tj0007iwvj7y7hc6qh/</id>
    <published>2020-06-03T09:51:08.000Z</published>
    <updated>2020-06-05T05:27:11.662Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;CAS Server的基本定制已经完成，接下来就需要对Client进行开发和测试，保证整个业务流程的正确性。这里通过两个client项目进行演示：其中一个项目使用filter方式进行认证；而另一个项目则采用spring security cas的方式进行认证。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CAS" scheme="http://yoursite.com/categories/CAS/"/>
    
    
      <category term="CAS" scheme="http://yoursite.com/tags/CAS/"/>
    
  </entry>
  
  <entry>
    <title>单点登录（二）</title>
    <link href="http://yoursite.com/2020/06/02/ckb20y8tl000aiwvjf174585x/"/>
    <id>http://yoursite.com/2020/06/02/ckb20y8tl000aiwvjf174585x/</id>
    <published>2020-06-02T08:28:46.000Z</published>
    <updated>2020-06-04T09:15:18.624Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;已经对SSO以及CAS的基本概念和流程有了一定了解之后，就可以开始着手实现自己的CAS认证服务器了。本文主要讲解如何在本地使用HTTPS的方式启动CAS Server，以及定制CAS Server的部分页面。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CAS" scheme="http://yoursite.com/categories/CAS/"/>
    
    
      <category term="CAS" scheme="http://yoursite.com/tags/CAS/"/>
    
  </entry>
  
  <entry>
    <title>单点登录（一）</title>
    <link href="http://yoursite.com/2020/06/01/ckb20y8t50001iwvjer42de92/"/>
    <id>http://yoursite.com/2020/06/01/ckb20y8t50001iwvjer42de92/</id>
    <published>2020-06-01T06:08:33.000Z</published>
    <updated>2020-06-04T09:12:40.427Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在分布式环境中，存在多个子系统，每个子系统独立部署。当用户登录其中一个系统之后，若需要访问另一个系统，使用传统方式session的话，就需要用户登录，一旦子系统数量众多，那么用户则需要在多个系统中进行登录，用户体验相当差。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CAS" scheme="http://yoursite.com/categories/CAS/"/>
    
    
      <category term="CAS" scheme="http://yoursite.com/tags/CAS/"/>
    
  </entry>
  
</feed>
